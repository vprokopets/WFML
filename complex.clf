/*
Example from <a href="http://t3-necsis.cs.uwaterloo.ca:8091/NECSIS-Workshop/Modeling%20Quality%204" target="exampleSource">wiki</a>
*/

abstract Feature
    cost -> integer
    mass -> integer

abstract ComfortFeature : Feature
    comfort -> integer

abstract FuelFeature : ComfortFeature
    fuel -> integer

abstract Car
    ABS : ComfortFeature ?
        [cost = 2]
        [mass = 1]
        [comfort = 1]
    xor Transmission
        Automatic : FuelFeature
            [fuel = 2]
            [mass = 1]
            [comfort = 2]
            [cost = 4]
        Manual : FuelFeature
            [fuel = 0]
            [mass = 1]
            [comfort = 1]
            [cost = 3]

    total_cost -> integer = sum Feature.cost
    total_comfort -> integer = sum ComfortFeature.cost
    total_fuel -> integer = sum FuelFeature.cost
    total_mass -> integer = sum FuelFeature.mass

optimalCar : Car

<< min optimalCar.total_cost >>
<< min optimalCar.total_fuel >>
<< max optimalCar.total_comfort >>
<< min optimalCar.total_mass >>
<< nim optimalCar.total_mass >>